tidy_data <- rbind(tidy_data,
rbind(indiv=id,
activity=act,
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T)))
dim(tidy_data)
tidy_data <- rbind(tidy_data,
cbind(indiv=id,
activity=act,
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T)))
dim8cbind(indiv=id,
activity=act,
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T))
dim(cbind(indiv=id,
activity=act,
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T)))
tidy_data <- rbind(tidy_data,
c(indiv=id,
activity=act,
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T)))
dim8
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T)
dim8
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T)
dim(
colMeans(X[X$indiv==id,] & X[X$activity==act,],na.rm=T))
colMeans(X_final[X_final$indiv==id,] & X_final[X_final$activity==act,],na.rm=T)
X_final[X_final$indiv==id,]
X_final$indiv==id & X_final$activity==act
colMeans(X_final[X_final$indiv==id & X_final$activity==act,],na.rm=T)
X_final[X_final$indiv==id & X_final$activity==act,]
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
tidy_data <- rbind(tidy_data,
cbind(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
tidy_data
tidy_data <- X_final[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
}
}
tidy_data
tidy_data <- X_final[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
tidy_data <- rbind(tidy_data,
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
tidy_data
tidy_data <- X_final[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
as.data.frame(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
t(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
as.data.frame(indiv=id,
activity=act,
t(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
)
as.data.frame(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
tidy_data <- X_final[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
tidy_data <- rbind(tidy_data,
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
)
tidy_data
rbind(tidy_data,
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
)
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
str(c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
))
str(as.data.frame(c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)))
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
dim(c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
))
length(c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
))
tidy_data <- X_final[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
tidy_data <- rbind(tidy_data,
c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
)
View(tidy_data)
str(c(indiv=id,
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
))
c(indiv=as.numeric(id),
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
cbind(indiv=as.numeric(id),
activity=act,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
tidy_data <- X[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
tidy_data <- X_final[0,] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
rbind(tidy_data,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
tidy_data
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
tidy_data
tidy_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
values_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
rbind(values_data,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
values_data
dim(values_data)
dim(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
length(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
rbind(values_data,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
rbind(values_data,deparse.level=1
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
rbind(values_data,deparse.level=1,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
rbind(values_data,deparse.level=2,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
str8colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
str(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
names(values_data)
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
rbind(values_data,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
rbind(values_data,
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T),
colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
,colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)
)
id_data
values_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
rbind(values_data,
c(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
)
rbind(values_data,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
)
rbind(values_data,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)),
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
)
values_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
cbind(q=1,rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
tidy_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
tidy_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
)
}
}
tidy_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
head(tidy_data)
dim(tidy_data)
setwd("C:/Users/mbonoli/Documents/GitHub/gcd_project")
X_test <- read.table("X_test.txt", quote="\"")
X_train <- read.table("X_train.txt", quote="\"")
features_names <- read.table("features.txt", quote="\"")[,2]
# Reading activity names
activities_names <- read.table("~/GitHub/gcd_project/activity_labels.txt", quote="\"")
names(activities_names) <- c("id_activity", "activity")
# Reading activities (y)
y_test <- read.table("y_test.txt", quote="\"")
y_train <- read.table("y_train.txt", quote="\"")
y <- rbind(y_test, y_train)
activities <- activities_names[y[,1],2]
indiv_test <- read.table("subject_test.txt", quote="\"")
indiv_train <- read.table("subject_train.txt", quote="\"")
indiv <- rbind(indiv_test, indiv_train)
names(indiv) <- "indiv"
X <- rbind(X_test,X_train)
y <- rbind(y_test, y_train)
names(X) <- features_names
mean_names <- as.character(features_names[grep("mean()", features_names, fixed=TRUE)])
sd_names <- as.character(features_names[grep("std()", features_names, fixed=TRUE)])
X_final <- cbind(indiv=indiv,
activity=activities,
X[,mean_names],
X[,sd_names])
indiv_ids <- unique(X[,"indiv"])
tidy_data <- X_final[0,c(-1,-2)] #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
head(X_final)
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
indiv_ids <- unique(X[,"indiv"])
indiv_ids <- unique(X_final[,"indiv"])
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
dim(tidy_data)
str(tidy_data)
str(X_final)
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T))
str(rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
str(tidy_data[,2])
str(tidy_data[,3])
str(as.numeric(tidy_data[,3]))
str(as.numeric(as.character(tidy_data[,3])))
as.character(tidy_data[,3])
str(as.numeric(as.character(tidy_data[,3])))
str(as.numeric(as.character(tidy_data[,4])))
tidy_data[,c(mean_names,std_names)]
tidy_data[,c(mean_names,sd_names)]
tidy_data[,c(mean_names,sd_names)] <- as.numeric(as.character(tidy_data[,c(mean_names,sd_names)]))
str(tidy_data)
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
str(tidy_data)
for (i in c(mean_names,sd_names)) {
tidy_data[,i] <- as.numeric(as.character(tidy_data[,i]))
}
str(tidy_data)
for (i in c("indiv",mean_names,sd_names)) {
tidy_data[,i] <- as.numeric(as.character(tidy_data[,i]))
}
str(tidy_data)
setwd("C:/Users/mbonoli/Documents/GitHub/gcd_project")
# Reading both datasets
X_test <- read.table("X_test.txt", quote="\"")
X_train <- read.table("X_train.txt", quote="\"")
# Reading variable names
features_names <- read.table("features.txt", quote="\"")[,2]
# Reading activity names
activities_names <- read.table("~/GitHub/gcd_project/activity_labels.txt", quote="\"")
names(activities_names) <- c("id_activity", "activity")
# Reading activities (y)
y_test <- read.table("y_test.txt", quote="\"")
y_train <- read.table("y_train.txt", quote="\"")
y <- rbind(y_test, y_train)
activities <- activities_names[y[,1],2]
# Reading individuals data
indiv_test <- read.table("subject_test.txt", quote="\"")
indiv_train <- read.table("subject_train.txt", quote="\"")
indiv <- rbind(indiv_test, indiv_train)
names(indiv) <- "indiv"
# 1. Merges the training and the test sets to create one data set.
X <- rbind(X_test,X_train)
y <- rbind(y_test, y_train)
# 3. Uses descriptive activity names to name the activities in the data set
names(X) <- features_names
mean_names <- as.character(features_names[grep("mean()", features_names, fixed=TRUE)])
sd_names <- as.character(features_names[grep("std()", features_names, fixed=TRUE)])
# 2. Extracts only the measurements on the mean and standard deviation for each measurement
X_final <- cbind(indiv=indiv,
activity=activities,
X[,mean_names],
X[,sd_names])
head(X_final)
indiv_ids <- unique(X_final[,"indiv"])
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
for (i in c("indiv",mean_names,sd_names)) {
tidy_data[,i] <- as.numeric(as.character(tidy_data[,i]))
}
dim(tidy_data)
str(tidy_data)
write(tidy_data, "tidy_data.txt", sep="\t")
write(tidy_data, "tidy_data.txt", sep=",", dec=".")
write.table(tidy_data, "tidy_data.txt", sep=",", dec=".")
save(tidy_data, "tidy_data.Rdata")
save(tidy_data, file="tidy_data.Rdata")
write.table(tidy_data, file="tidy_data.txt", sep="\t", dec=".")
mean_names
paste("average_",mean_names)
paste("average_",mean_names,sep="")
paste("average_",c(mean_names,sd_names),sep="")
names(tidy_data)[c(mean_names,sd_names)] <- paste("average_",c(mean_names,sd_names),sep="")
c(mean_names,sd_names)
names(tidy_data)[c(mean_names,sd_names)]
names(tidy_data)[3:68] <- paste("average_",c(mean_names,sd_names),sep="")
str(tidy_data)
setwd("C:/Users/mbonoli/Documents/GitHub/gcd_project")
# Reading both datasets
X_test <- read.table("X_test.txt", quote="\"")
X_train <- read.table("X_train.txt", quote="\"")
# Reading variable names
features_names <- read.table("features.txt", quote="\"")[,2]
# Reading activity names
activities_names <- read.table("~/GitHub/gcd_project/activity_labels.txt", quote="\"")
names(activities_names) <- c("id_activity", "activity")
# Reading activities (y)
y_test <- read.table("y_test.txt", quote="\"")
y_train <- read.table("y_train.txt", quote="\"")
y <- rbind(y_test, y_train)
activities <- activities_names[y[,1],2]
# Reading individuals data
indiv_test <- read.table("subject_test.txt", quote="\"")
indiv_train <- read.table("subject_train.txt", quote="\"")
indiv <- rbind(indiv_test, indiv_train)
names(indiv) <- "indiv"
# 1. Merges the training and the test sets to create one data set.
X <- rbind(X_test,X_train)
y <- rbind(y_test, y_train)
# 3. Uses descriptive activity names to name the activities in the data set
names(X) <- features_names
mean_names <- as.character(features_names[grep("mean()", features_names, fixed=TRUE)])
sd_names <- as.character(features_names[grep("std()", features_names, fixed=TRUE)])
# 2. Extracts only the measurements on the mean and standard deviation for each measurement
X_final <- cbind(indiv=indiv,
activity=activities,
X[,mean_names],
X[,sd_names])
head(X_final)
indiv_ids <- unique(X_final[,"indiv"])
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
for (i in c("indiv",mean_names,sd_names)) {
tidy_data[,i] <- as.numeric(as.character(tidy_data[,i]))
}
names(tidy_data)[3:68] <- paste("average_",names(tidy_data)[3:68],sep="")
unique(tidy_data[,1])
setwd("C:/Users/mbonoli/Documents/GitHub/gcd_project")
# Reading both datasets
X_test <- read.table("X_test.txt", quote="\"")
X_train <- read.table("X_train.txt", quote="\"")
# Reading variable names
features_names <- read.table("features.txt", quote="\"")[,2]
# Reading activity names
activities_names <- read.table("~/GitHub/gcd_project/activity_labels.txt", quote="\"")
names(activities_names) <- c("id_activity", "activity")
# Reading activities (y)
y_test <- read.table("y_test.txt", quote="\"")
y_train <- read.table("y_train.txt", quote="\"")
y <- rbind(y_test, y_train)
activities <- activities_names[y[,1],2]
# Reading individuals data
indiv_test <- read.table("subject_test.txt", quote="\"")
indiv_train <- read.table("subject_train.txt", quote="\"")
indiv <- rbind(indiv_test, indiv_train)
names(indiv) <- "indiv"
# 1. Merges the training and the test sets to create one data set.
X <- rbind(X_test,X_train)
y <- rbind(y_test, y_train)
# 3. Uses descriptive activity names to name the activities in the data set
names(X) <- features_names
mean_names <- as.character(features_names[grep("mean()", features_names, fixed=TRUE)])
sd_names <- as.character(features_names[grep("std()", features_names, fixed=TRUE)])
# 2. Extracts only the measurements on the mean and standard deviation for each measurement
X_final <- cbind(indiv=indiv,
activity=activities,
X[,mean_names],
X[,sd_names])
head(X_final)
indiv_ids <- unique(X_final[,"indiv"])
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
for (i in c("indiv",mean_names,sd_names)) {
tidy_data[,i] <- as.numeric(as.character(tidy_data[,i]))
}
names(tidy_data)[3:68] <- paste("average_",names(tidy_data)[3:68],sep="")
dim(tidy_data)
str(tidy_data)
write.table(tidy_data, file="tidy_data.txt", sep="\t", dec=".")
save(tidy_data, file="tidy_data.Rdata")
setwd("C:/Users/mbonoli/Documents/GitHub/gcd_project")
# Reading both datasets
X_test <- read.table("X_test.txt", quote="\"")
X_train <- read.table("X_train.txt", quote="\"")
# Reading variable names
features_names <- read.table("features.txt", quote="\"")[,2]
# Reading activity names
activities_names <- read.table("~/GitHub/gcd_project/activity_labels.txt", quote="\"")
names(activities_names) <- c("id_activity", "activity")
# Reading activities (y)
y_test <- read.table("y_test.txt", quote="\"")
y_train <- read.table("y_train.txt", quote="\"")
y <- rbind(y_test, y_train)
activities <- activities_names[y[,1],2]
# Reading individuals data
indiv_test <- read.table("subject_test.txt", quote="\"")
indiv_train <- read.table("subject_train.txt", quote="\"")
indiv <- rbind(indiv_test, indiv_train)
names(indiv) <- "indiv"
# 1. Merges the training and the test sets to create one data set.
X <- rbind(X_test,X_train)
y <- rbind(y_test, y_train)
# 3. Uses descriptive activity names to name the activities in the data set
names(X) <- features_names
mean_names <- as.character(features_names[grep("mean()", features_names, fixed=TRUE)])
sd_names <- as.character(features_names[grep("std()", features_names, fixed=TRUE)])
# 2. Extracts only the measurements on the mean and standard deviation for each measurement
X_final <- cbind(indiv=indiv,
activity=activities,
X[,mean_names],
X[,sd_names])
head(X_final)
indiv_ids <- unique(X_final[,"indiv"])
tidy_data <- X_final[0,]  #colMeans(X_indiv[X_indiv$indiv==indiv_ids[1],],na.rm=T)
for (id in indiv_ids){
for (act in activities_names[,2]){
tidy_data <- rbind(tidy_data,
cbind(indiv=as.numeric(id),
activity=act,
rbind(colMeans(X_final[X_final$indiv==id & X_final$activity==act,c(-1,-2)],na.rm=T)))
)
}
}
for (i in c("indiv",mean_names,sd_names)) {
tidy_data[,i] <- as.numeric(as.character(tidy_data[,i]))
}
names(tidy_data)[3:68] <- paste("average_",names(tidy_data)[3:68],sep="")
dim(tidy_data)
str(tidy_data)
save(tidy_data, file="tidy_data.Rdata")
write.table(tidy_data, file="tidy_data.txt", sep="\t", dec=".")
